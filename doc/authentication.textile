h2. Authentication

p. The libraries provide support for multiple authentication protocols. While Handsoap's authentication support is more low level, Savon provides an API for it. 

h3. WSSE authentication

p. As you might expect, the Handsoap way for this aspect is to implement a callback method for the document creation. With Savon you can attach your credentials using a WSSE object inside your request block. Compare the two implementations:

bc.. def on_create_document(doc)
  doc.alias 's', "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
  header = doc.find("Header")
  header.add "s:Security" do |s|
    s.set_attr "env:mustUnderstand", "0"
    s.add "s:Username", @@username
    [...]
  end
end

response = client.get_bank do |soap, wsse|
  wsse.username = @@username
  [...]
end

h3. HTTP authentication

p. The same approach is used by Handsoap to offer HTTP authentication:

bc.. def on_after_create_http_request(http_request)
    http_request.set_auth @@username, @@password
  end

p. Savon provides support for this feature "just yet":http://github.com/rubiii/savon/issues#issue/15 (since 0.7.0):

bc.. client.request.basic_auth "username", "password"

h3. SSL support

p. At the time of writing only Savon supports SSL authentication directly. This is achieved by passing a configuration hash to the Savon::Client:

bc.. client = Savon::Client.new "http://example.com/UserService?wsdl", :ssl => {
  :client_cert => OpenSSL::X509::Certificate.new(File.read("client_cert.pem")),
  :client_key => OpenSSL::PKey::RSA.new(File.read("client_key.pem"), "password if one exists"),
  :ca_file => "cacert.pem",
  :verify  => OpenSSL::SSL::VERIFY_PEER
}

p. While the "Handsoap documentation":http://wiki.github.com/unwire/handsoap/authentication states that support for SSL is not yet implemented, there might be a chance to enable it through the use of the preconfigured http driver.



